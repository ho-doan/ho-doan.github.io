"use strict";(self.webpackChunkarcgis_node=self.webpackChunkarcgis_node||[]).push([[1307],{61307:(e,t,i)=>{i.r(t),i.d(t,{default:()=>ne});var s=i(82392),n=i(37623),r=i(81482),a=(i(6273),i(80861)),o=(i(67498),i(26325)),l=i(52239),h=i(61090),p=i(61985),u=i(5262),c=i(34561),d=i(93516),m=(i(3313),i(20857)),g=(i(39553),i(3438),i(60861)),v=i(70214),_=i(57725),y=i(59491),w=i(68660),M=i(65670),f=i(22538),b=i(11682),L=i(84456),A=i(5896),D=i(67907),S=i(19793),T=i(66019),Z=i(83423),C=i(6364),O=i(17071),x=i(13243),R=i(28535),k=i(51720),B=i(54500),G=i(53981),U=i(10709),I=i(4631),V=i(1912),E=i(60936),H=i(31864),z=i(70842),j=i(68231),W=i(38648),P=i(44153);const $=1e5;let J=class extends C.g{constructor(e){super(e),this._drawActive=!1,this._measurementLayer=new b.A({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new b.A({internal:!0,listMode:"hide",visible:!1}),this._snappingLayer=new b.A({internal:!0,listMode:"hide",visible:!1}),this._updatingHandles=new w.U,this._vertices=[],this.geodesicDistanceThreshold=null,this.measurement=null,this.measurementLabel=null}initialize(){(0,U.ud)("esri/core/t9n/Units").then((e=>{this.messages=e}));const e=this.view;this._draw=new D.A({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),e.focus(),this._snappingManagerResult=(0,B.X)(e),this.addHandles([(0,I.oQ)((async()=>{this.messages=await(0,U.ud)("esri/core/t9n/Units")})),(0,p.wB)((()=>[this.unit,this.geodesicDistanceThreshold,this.messages]),(()=>{this._updatePolylines()}),p.Vh),(0,p.wB)((()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor]),(()=>{if(!this._vertices.length)return;const e=this._vertices.map((({coord:e})=>e));for(const{handle:e}of this._vertices)e.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(e)})),(0,p.wB)((()=>this.snappingOptions.featureSources),(e=>{for(const t of e)t.layer!==this._measurementLayer&&t.layer!==this._manipulatorLayer||(t.enabled=!1)}),p.Vh),this._snappingManagerResult]),(0,G.BY)(this)}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=(0,_.pR)(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=(0,_.pR)(this._measurementLayer),this._manipulatorLayer=(0,_.pR)(this._manipulatorLayer),this._snappingLayer=(0,_.pR)(this._snappingLayer),this._updatingHandles=(0,_.pR)(this._updatingHandles),this._resetVertices()}get _snappingManager(){return this._snappingManagerResult.snappingManager}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}get snappingOptions(){return this._snappingManager.options}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}onActivate(){this._drawActive||0!==this._vertices.length||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0,this._snappingLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1,this._snappingLayer.visible=!1}_getSnappingContext(e){return new R.e({elevationInfo:{mode:"on-the-ground",offset:0},pointer:e,editGeometryOperations:new x.p(new O.ZE("point",(0,S.BV)(!1,!1,this.view.spatialReference)),L.RT.Local),visualizer:new A.J(this._snappingLayer)})}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const e=this._snappingManager,t=this._draw.create("polyline",{mode:"click",snappingManager:e});t.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],(e=>this._updateSketch(e.vertices))),t.on("draw-complete",(()=>{this._stopSketch()}))}_stopSketch(){this.manipulators.forEach((({manipulator:e})=>{e.interactive=!0})),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const{spatialReference:t}=this.view;for(;this._vertices.length>e.length;){const{handle:e,manipulator:t}=this._vertices.pop();e.remove(),this.manipulators.remove(t)}for(let i=this._vertices.length;i<e.length;i++){const[s,n]=e[i],r=new V.A({x:s,y:n,spatialReference:t}),a=N(r,this.view,this._manipulatorLayer);this.manipulators.add(a);const o=x.p.fromGeometry(r,L.RT.Local),l=[o.on("vertex-update",(e=>{const t=e.vertices.at(0);t&&(this._vertices[i].coord=[t.pos[0],t.pos[1]],this._updatePolylines())})),(0,T.Xt)(a,((e,t,i,s)=>{const n=this._getSnappingContext(s),r=this._snappingManager,a=this._updatingHandles,{snappingStep:l}=(0,k.L)({snappingContext:n,snappingManager:r,updatingHandles:a});t.next((0,T.y$)(this.view)).next((t=>{if("start"===t.action){const i=new V.A(t.mapStart);e.graphic.geometry=i,o.trySetGeometry(i)}return t})).next(...l).next((0,T.Wp)({operations:o})).next((()=>{e.graphic.geometry=o.data.geometry}))}))];this._vertices.push({manipulator:a,coord:[s,n],handle:(0,v.vE)(l)})}const i=this._vertices.length-1,s=this._vertices[i],[n,r]=e[i];s.coord[0]===n&&s.coord[1]===r||(s.coord=[n,r],s.manipulator.graphic.geometry=new V.A({x:n,y:r,spatialReference:t}));const a=this._drawActive?this._vertices[i].manipulator:null;this.manipulators.forEach((({manipulator:e})=>{e.interactive=null==a||e!==a})),this._updatePolylines()}_updatePolylines(){if(this._vertices.length<2)return void this._measurementLayer.removeAll();const e=this._vertices.map((({coord:e})=>e)),{measurement:t,drawing:i,original:s}=function(e,t,i){const s=new W.A({paths:[e],spatialReference:t});let n,r;if(t.isGeographic)if((0,f.TT)(t))n=(0,f.l1)([s],"meters")[0],r=(0,f.Ow)(s,$);else{const e=(0,c.project)(s,P.A.WGS84),i=(0,f.Ow)(e,$);n=(0,f.l1)([e],"meters")[0],r=(0,c.project)(i,t)}else if(t.isWebMercator)n=(0,M.geodesicLength)(s,"meters"),r=(0,M.geodesicDensify)(s,$,"meters");else{const e=(0,M.planarLength)(s,"meters");if(null!=i&&e>=i){const e=(0,c.project)(s,P.A.WGS84),i=(0,f.Ow)(e,$);n=(0,f.l1)([e],"meters")[0],r=(0,c.project)(i,t)}else n=e,r=s}return{measurement:{geometry:r,length:n},original:s,drawing:r}}(e,this.view.spatialReference,this.geodesicDistanceThreshold);this._set("measurement",t);const n=function(e,t,i){if(!t||!e)return"";switch(i){case"metric":return(0,y.Ee)(e,t.length,"meters");case"imperial":return(0,y.tr)(e,t.length,"meters");default:return(0,y.zJ)(e,(0,u.oU)(t.length,"meters",i),i)}}(this.messages,t,this.unit);let r,a;this._set("measurementLabel",n);const{graphics:o}=this._measurementLayer,l=2===o.length,{effectiveTheme:h}=this.view;l?(r=o.at(0),a=o.at(1)):(r=new m.A({symbol:new E.A({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",effects:[{type:"CIMGeometricEffectDashes",dashTemplate:[14,12],lineDashEnding:"FullGap",controlPointEnding:"NoConstraint"}],enable:!0,capStyle:"Butt",joinStyle:"Round",width:3.5,color:(0,g.bJ)(h.accentColor).toArray()},{type:"CIMSolidStroke",enable:!0,capStyle:"Butt",joinStyle:"Round",width:5,color:h.accentColor.toArray()}]}}})}),a=new m.A({symbol:new H.A({color:h.textColor,haloColor:(0,g._L)((0,g.bJ)(h.textColor,g.pW.Low),.5),haloSize:2,font:new z.A({size:14,family:"sans-serif"})})}),o.removeAll(),o.addMany([r,a])),r.geometry=i,a.geometry=s.extent?.center,a.symbol.text=n}};function N(e,t,i){const s=(0,g._L)(t.effectiveTheme.accentColor,.5),n={type:"simple-line",width:0},r=new j.A({style:"circle",color:s,size:8,outline:n}),a=new j.A({style:"circle",color:s,size:12,outline:n}),o=new m.A({geometry:e,symbol:r});return new Z.l({view:t,layer:i,graphic:o,focusedSymbol:a})}(0,s._)([(0,r.MZ)()],J.prototype,"_drawActive",void 0),(0,s._)([(0,r.MZ)({readOnly:!0})],J.prototype,"cursor",null),(0,s._)([(0,r.MZ)({value:!0})],J.prototype,"editable",null),(0,s._)([(0,r.MZ)({type:Number})],J.prototype,"geodesicDistanceThreshold",void 0),(0,s._)([(0,r.MZ)({readOnly:!0})],J.prototype,"measurement",void 0),(0,s._)([(0,r.MZ)({readOnly:!0})],J.prototype,"measurementLabel",void 0),(0,s._)([(0,r.MZ)()],J.prototype,"messages",void 0),(0,s._)([(0,r.MZ)()],J.prototype,"unit",void 0),(0,s._)([(0,r.MZ)()],J.prototype,"updating",null),(0,s._)([(0,r.MZ)({constructOnly:!0})],J.prototype,"view",void 0),J=(0,s._)([(0,o.$)("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DTool")],J);var K=i(74219);let Q=class extends K.j{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="DistanceMeasurement2DViewModel is only supported in 2D views."}initialize(){this.addHandles([(0,p.wB)((()=>this.view?.spatialReference),(()=>this.clear())),(0,p.wB)((()=>this.unit),(e=>{null!=this.tool&&(this.tool.unit=e)}),p.Vh),(0,p.wB)((()=>this.geodesicDistanceThreshold),(e=>{null!=this.tool&&(this.tool.geodesicDistanceThreshold=e)}),p.Vh)])}get geodesicDistanceThreshold(){return this._get("geodesicDistanceThreshold")}set geodesicDistanceThreshold(e){(0,h.Lx)(a.A.getLogger(this),"geodesicDistanceThreshold",{version:"4.29",warnOnce:!0}),this._set("geodesicDistanceThreshold",e)}get measurement(){return null!=this.tool?this.tool.measurement:null}get measurementLabel(){return null!=this.tool?this.tool.measurementLabel:null}get state(){return this.disabled||null==this.view||(e=this.view?.spatialReference,null==e)?"disabled":null!=this.tool&&this.measurement?this.tool.active?"measuring":"measured":"ready";var e}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return u.GB}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}async start(){const e=this.view;null!=e&&(await(0,p.C_)((()=>e.ready)),function(e){if(!e)return!1;const{isGeographic:t,isWebMercator:i,isWGS84:s}=e;return t&&!s&&!(0,f.TT)(e)||!t&&!i}(e.spatialReference)&&await(0,c.load)()),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new J({view:this.view,visible:this.visible,geodesicDistanceThreshold:this.geodesicDistanceThreshold,unit:this.unit})}_validateUnit(e){const{unitOptions:t,defaultUnit:i}=this;return null!=e&&t.includes(e)?e:t.includes(i)?i:t.length>0?t[0]:i}_validateUnits(e){if(null==e)return[];const t=e.filter((e=>u.GB.includes(e)));return 0===t.length?u.GB.slice():t}};(0,s._)([(0,r.MZ)(d.q)],Q.prototype,"defaultUnit",void 0),(0,s._)([(0,r.MZ)()],Q.prototype,"geodesicDistanceThreshold",null),(0,s._)([(0,r.MZ)({readOnly:!0})],Q.prototype,"measurement",null),(0,s._)([(0,r.MZ)({readOnly:!0})],Q.prototype,"measurementLabel",null),(0,s._)([(0,r.MZ)({readOnly:!0})],Q.prototype,"state",null),(0,s._)([(0,r.MZ)({type:String})],Q.prototype,"unit",null),(0,s._)([(0,r.MZ)({type:[String]})],Q.prototype,"unitOptions",null),Q=(0,s._)([(0,o.$)("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DViewModel")],Q);const X=Q;var q=i(533),F=i(2070),Y=(i(33510),i(2153)),ee=i(2110);const te="esri-distance-measurement-2d",ie={base:te,newMeasurementButton:`${te}__clear-button`};let se=class extends l.A{constructor(e,t){super(e,t),this.messages=null,this.messagesCommon=null,this.viewModel=new X}get active(){return this.viewModel.active}get icon(){return"measure-line"}set icon(e){this._overrideIfSome("icon",e)}get label(){return this.messages?.widgetLabel??""}set label(e){this._overrideIfSome("label",e)}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{messages:e,messagesCommon:t,unit:i,unitOptions:s,viewModel:r}=this,{active:a,measurementLabel:o,state:l,supported:h}=r;return(0,ee.K)("div",{"aria-label":this.messages.widgetLabel,class:this.classes(ie.base,q.D.widget,q.D.panel),key:this,role:"presentation"},this.visible?(0,ee.K)(F.I,{active:a,measurementItems:[{key:"distance",title:e.distance,value:o}],messages:{...e,notApplicable:t.notApplicable},newMeasurementButtonClass:ie.newMeasurementButton,state:l,supported:h,unit:i,unitOptions:s,onNewMeasurementClick:()=>{(0,n.QZ)(this.viewModel.start())},onUnitChange:e=>{this.unit=e}}):null)}};(0,s._)([(0,r.MZ)({readOnly:!0})],se.prototype,"active",null),(0,s._)([(0,r.MZ)()],se.prototype,"icon",null),(0,s._)([(0,r.MZ)()],se.prototype,"label",null),(0,s._)([(0,r.MZ)()],se.prototype,"uiStrings",void 0),(0,s._)([(0,r.MZ)(),(0,Y.G)("esri/widgets/DistanceMeasurement2D/t9n/DistanceMeasurement2D")],se.prototype,"messages",void 0),(0,s._)([(0,r.MZ)(),(0,Y.G)("esri/t9n/common")],se.prototype,"messagesCommon",void 0),(0,s._)([(0,r.MZ)()],se.prototype,"unit",null),(0,s._)([(0,r.MZ)()],se.prototype,"unitOptions",null),(0,s._)([(0,r.MZ)()],se.prototype,"view",null),(0,s._)([(0,r.MZ)({type:X})],se.prototype,"viewModel",void 0),(0,s._)([(0,r.MZ)({type:Boolean})],se.prototype,"visible",null),se=(0,s._)([(0,o.$)("esri.widgets.DistanceMeasurement2D")],se);const ne=se}}]);