"use strict";(self.webpackChunkarcgis_node=self.webpackChunkarcgis_node||[]).push([[3084],{73084:(e,t,r)=>{r.r(t),r.d(t,{default:()=>we});var o=r(82392),i=r(32083),s=(r(3313),r(20857)),n=r(20879),l=(r(42957),r(8499),r(72502),r(2394),r(52721),r(46243),r(79645),r(1851),r(29221)),a=r(80861),u=r(40377),p=r(62991),c=r(67214),y=r(21750),d=r(37623),m=r(61985),f=r(5262),h=r(19759),w=r(81482),S=(r(6273),r(67498),r(25376)),v=r(26325),g=r(48524),A=r(2527),b=r(8e3),_=r(34561),B=r(67488),P=r(45449),N=r(20923),C=r(4648),I=r(60368),M=r(22111),L=r(63457),D=r(3438),R=r(84977),F=r(68231);let O=class extends R.oY{constructor(e){super(e),this.break=new F.A({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.first=new F.A({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.unlocated=new F.A({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.last=new F.A({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.middle=new F.A({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.waypoint=new F.A({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};(0,o._)([(0,w.MZ)({types:D.wC})],O.prototype,"break",void 0),(0,o._)([(0,w.MZ)({types:D.wC})],O.prototype,"first",void 0),(0,o._)([(0,w.MZ)({types:D.wC})],O.prototype,"unlocated",void 0),(0,o._)([(0,w.MZ)({types:D.wC})],O.prototype,"last",void 0),(0,o._)([(0,w.MZ)({types:D.wC})],O.prototype,"middle",void 0),(0,o._)([(0,w.MZ)({types:D.wC})],O.prototype,"waypoint",void 0),O=(0,o._)([(0,v.$)("esri.layers.support.RouteStopSymbols")],O);const k=O;var Z=r(84655),T=r(55736);let x=class extends R.oY{constructor(e){super(e),this.directionLines=new Z.A({color:[0,122,194],width:6}),this.directionPoints=new F.A({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new F.A({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new T.A({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new Z.A({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new Z.A({width:8,color:[20,89,127]}),this.stops=new k}};(0,o._)([(0,w.MZ)({types:D.Y7})],x.prototype,"directionLines",void 0),(0,o._)([(0,w.MZ)({types:D.wC})],x.prototype,"directionPoints",void 0),(0,o._)([(0,w.MZ)({types:D.wC})],x.prototype,"pointBarriers",void 0),(0,o._)([(0,w.MZ)({types:D.Ac})],x.prototype,"polygonBarriers",void 0),(0,o._)([(0,w.MZ)({types:D.Y7})],x.prototype,"polylineBarriers",void 0),(0,o._)([(0,w.MZ)({types:D.Y7})],x.prototype,"routeInfo",void 0),(0,o._)([(0,w.MZ)({type:k})],x.prototype,"stops",void 0),x=(0,o._)([(0,v.$)("esri.layers.support.RouteSymbols")],x);const G=x;var J=r(83382),q=r(95225),j=r(86074),z=r(95691),W=r(85561),E=r(66439),U=r(79915),K=r(70091),Y=r(20819),V=r(4991),$=r(58881),H=r(38607),Q=r(56760),X=r(33294),ee=r(44153),te=r(67709);function re(e){return e.length?e:null}function oe(e){switch(e){case"esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:oe("esriGeometryPolyline")};case"esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case"esriGeometryPolygon":return{type:"esriSFS",style:"esriSFSNull",outline:oe("esriGeometryPolyline")}}}function ie(e){return"layers"in e}async function se(e){const t=ee.A.WGS84;return await(0,_.initializeProjection)(e.spatialReference,t),(0,_.project)(e,t)}function ne(e,t){switch(t){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function le(e,t){return"decimal-degrees"===t||"points"===t||"unknown"===t?e:(0,f.oU)(e,t,"meters")}const ae=u.A.ofType(E.A),ue=u.A.ofType(U.A),pe=u.A.ofType(K.A),ce=u.A.ofType(Y.A),ye=u.A.ofType(V.A),de=u.A.ofType(X.A),me="esri.layers.RouteLayer",fe=()=>a.A.getLogger(me);let he=class extends((0,N.dM)((0,M.j)((0,C.q)((0,I.PortalLayer)((0,c.P)(P.A)))))){constructor(e){super(e),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.defaultSymbols=new G,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new pe,this.polygonBarriers=new ce,this.polylineBarriers=new ye,this.routeInfo=null,this.spatialReference=ee.A.WGS84,this.stops=new de,this.type="route";const t=()=>{this._setStopSymbol(this.stops)};this.addHandles((0,m.on)((()=>this.stops),"change",t,{sync:!0,onListenerAdd:t}))}writeFeatureCollectionWebmap(e,t,r,o){const i=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter((e=>!!e)),s=i.map(((e,t)=>t)),n="web-map"===o.origin?"featureCollection.layers":"layers";(0,y.sM)(n,i,t),t.opacity=this.opacity,t.visibility=this.visible,t.visibleLayers=s}readDirectionLines(e,t){return this._getNetworkFeatures(t,"DirectionLines",(e=>E.A.fromGraphic(e)))}readDirectionPoints(e,t){return this._getNetworkFeatures(t,"DirectionPoints",(e=>U.A.fromGraphic(e)))}get fullExtent(){const e=new b.A({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:ee.A.WGS84});if(null!=this.routeInfo?.geometry)return this.routeInfo.geometry.extent??e;if(null==this.stops)return e;const t=this.stops.filter((e=>null!=e.geometry));if(t.length<2)return e;const{spatialReference:r}=t.at(0).geometry;if(null==r)return e;const o=t.toArray().map((e=>{const t=e.geometry;return[t.x,t.y]}));return new te.A({points:o,spatialReference:r}).extent}readMaxScale(e,t){const r=ie(t)?t.layers:t.featureCollection?.layers,o=r?.find((e=>null!=e.layerDefinition.maxScale));return o?.layerDefinition.maxScale??0}readMinScale(e,t){const r=ie(t)?t.layers:t.featureCollection?.layers,o=r?.find((e=>null!=e.layerDefinition.minScale));return o?.layerDefinition.minScale??0}readPointBarriers(e,t){return this._getNetworkFeatures(t,"Barriers",(e=>K.A.fromGraphic(e)))}readPolygonBarriers(e,t){return this._getNetworkFeatures(t,"PolygonBarriers",(e=>Y.A.fromGraphic(e)))}readPolylineBarriers(e,t){return this._getNetworkFeatures(t,"PolylineBarriers",(e=>V.A.fromGraphic(e)))}readRouteInfo(e,t){return this._getNetworkFeatures(t,"RouteInfo",(e=>$.A.fromGraphic(e))).at(0)??null}readSpatialReference(e,t){const r=ie(t)?t.layers:t.featureCollection?.layers;if(!r?.length)return ee.A.WGS84;const{layerDefinition:o,featureSet:i}=r[0],s=i.features[0],n=s?.geometry?.spatialReference??i.spatialReference??o.spatialReference??o.extent.spatialReference??B.KK;return ee.A.fromJSON(n)}readStops(e,t){return this._getNetworkFeatures(t,"Stops",(e=>X.A.fromGraphic(e)),(e=>this._setStopSymbol(e)))}get title(){return this.routeInfo?.name??"Route"}set title(e){this._overrideIfSome("title",e)}get url(){return i.A.routeServiceUrl}set url(e){null!=e?this._set("url",(0,L.Jf)(e,fe())):this._set("url",i.A.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){this.removeResult(),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}removeResult(){null!=this.directionLines&&(this.directionLines.removeAll(),this._set("directionLines",null)),null!=this.directionPoints&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),null!=this.routeInfo&&this._set("routeInfo",null)}async save(){await this.load();const{fullExtent:e,portalItem:t}=this;if(!t)throw new p.A("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!t.id)throw new p.A("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if("Feature Collection"!==t.type)throw new p.A("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(null==this.routeInfo)throw new p.A("routelayer:route-unsolved","save() requires a solved route");const{portal:r}=t;await r.signIn(),r.user||await t.reload();const{itemUrl:o,itemControl:i}=t;if("admin"!==i&&"update"!==i)throw new p.A("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const s={messages:[],origin:"portal-item",portal:r,url:o?(0,h.An)(o):void 0,writtenProperties:[]},n=this.write(void 0,s);return t.extent=await se(e),t.title=this.title,await t.update({data:n}),t}async saveAs(e,t={}){if(await this.load(),null==this.routeInfo)throw new p.A("routelayer:route-unsolved","saveAs() requires a solved route");const r=q.default.from(e).clone();r.extent??=await se(this.fullExtent),r.id=null,r.portal??=J.A.getDefault(),r.title??=this.title,r.type="Feature Collection",r.typeKeywords=["Data","Feature Collection",j.mm.MULTI_LAYER,"Route Layer"];const{portal:o}=r,i={messages:[],origin:"portal-item",portal:o,url:null,writtenProperties:[]};await o.signIn();const s=t?.folder,n=this.write(void 0,i);return await(o.user?.addItem({item:r,folder:s,data:n})),this.portalItem=r,(0,A.v)(i),i.portalItem=r,r}async solve(e,t){const r=e?.stops??this.stops,o=e?.pointBarriers??re(this.pointBarriers),i=e?.polylineBarriers??re(this.polylineBarriers),s=e?.polygonBarriers??re(this.polygonBarriers);if(null==r)throw new p.A("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if((function(e){return"esri.rest.support.FeatureSet"===e.declaredClass}(r)||function(e){return"esri.rest.support.NetworkFeatureSet"===e.declaredClass}(r))&&r.features.length<2||u.A.isCollection(r)&&r.length<2)throw new p.A("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(u.A.isCollection(r))for(const e of r)e.routeName=null;const n=e?.apiKey,l=this.url,a=await this._getServiceDescription(l,n,t),c=e?.travelMode??a.defaultTravelMode,y=e?.accumulateAttributes??[];null!=c&&(y.push(c.distanceAttributeName),c.timeAttributeName&&y.push(c.timeAttributeName));const m={accumulateAttributes:y,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:o,polylineBarriers:i,polygonBarriers:s,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!o,returnDirections:!0,returnPolygonBarriers:!!s,returnPolylineBarriers:!!i,returnRoutes:!0,returnStops:!0,stops:r},f=H.A.from(e??{});let h;f.set(m);try{h=await(0,W.k)(l,f,t)}catch(e){throw(0,d.zf)(e)?e:new p.A("routelayer:failed-route-request","the routing request failed",{error:e})}const w=this._toRouteLayerSolution(h);return this._isOverridden("title")||(this.title=w.routeInfo.name??"Route"),function(e,t,r){const o=t.networkDataset?.networkAttributes,i=o?.filter((({usageType:e})=>"cost"===e))??[],s=r.travelMode??t.defaultTravelMode;if(null==s)return void fe().warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:n,distanceAttributeName:l}=s,a=i.find((({name:e})=>e===n)),u=i.find((({name:e})=>e===l)),c=r.travelMode?.impedanceAttributeName??r.impedanceAttribute??t.impedance,y=a?.units,d=u?.units;if(!y||!d)throw new p.A("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const m=r.directionsLanguage??t.directionsLanguage,f=r.accumulateAttributes??t.accumulateAttributeNames??[],h=new Set(i.filter((({name:e})=>e===n||e===l||e===c||null!=e&&f.includes(e))).map((({name:e})=>e))),w=e=>{for(const t in e)h.has(t)||delete e[t]};for(const t of e.pointBarriers)null!=t.costs&&(t.addedCost=t.costs[c]??0,w(t.costs));for(const t of e.polygonBarriers)null!=t.costs&&(t.scaleFactor=t.costs[c]??1,w(t.costs));for(const t of e.polylineBarriers)null!=t.costs&&(t.scaleFactor=t.costs[c]??1,w(t.costs));const{routeInfo:S}=e,{findBestSequence:v,preserveFirstStop:g,preserveLastStop:A,startTimeIsUTC:b,timeWindowsAreUTC:_}=r;S.analysisSettings=new Q.A({accumulateAttributes:f,directionsLanguage:m,findBestSequence:v,preserveFirstStop:g,preserveLastStop:A,startTimeIsUTC:b,timeWindowsAreUTC:_,travelMode:s}),S.totalDuration=ne(S.totalCosts?.[n]??0,y),S.totalDistance=le(S.totalCosts?.[l]??0,d),S.totalLateDuration=ne(S.totalViolations?.[n]??0,y),S.totalWaitDuration=ne(S.totalWait?.[n]??0,y),null!=S.totalCosts&&w(S.totalCosts),null!=S.totalViolations&&w(S.totalViolations),null!=S.totalWait&&w(S.totalWait);for(const t of e.stops)null!=t.serviceCosts&&(t.serviceDuration=ne(t.serviceCosts[n]??0,y),t.serviceDistance=le(t.serviceCosts[l]??0,d),w(t.serviceCosts)),null!=t.cumulativeCosts&&(t.cumulativeDuration=ne(t.cumulativeCosts[n]??0,y),t.cumulativeDistance=le(t.cumulativeCosts[l]??0,d),w(t.cumulativeCosts)),null!=t.violations&&(t.lateDuration=ne(t.violations[n]??0,y),w(t.violations)),null!=t.wait&&(t.waitDuration=ne(t.wait[n]??0,y),w(t.wait))}(w,a,f),w}update(e){const{stops:t,directionLines:r,directionPoints:o,pointBarriers:i,polylineBarriers:s,polygonBarriers:n,routeInfo:l}=e;this.set({stops:t,pointBarriers:i,polylineBarriers:s,polygonBarriers:n}),this._set("directionLines",r),this._set("directionPoints",o),this._set("routeInfo",l),null!=l.geometry&&(this.spatialReference=l.geometry.spatialReference)}_getNetworkFeatures(e,t,r,o){const i=ie(e)?e.layers:e.featureCollection?.layers,a=i?.find((e=>e.layerDefinition.name===t));if(null==a)return new u.A;const{layerDefinition:p,popupInfo:c,featureSet:y}=a,d=p.drawingInfo.renderer,{features:m}=y,f=y.spatialReference??p.spatialReference??p.extent.spatialReference??B.KK,h=d&&(0,l.L)(d),w=ee.A.fromJSON(f),S=m.map((e=>{const o=s.A.fromJSON(e);null!=o.geometry&&null!=e.geometry&&null==e.geometry.spatialReference&&(o.geometry.spatialReference=w);const i=r(o);return i.symbol??=h?.getSymbol(o)??this._getNetworkSymbol(t),i.popupTemplate??=c&&n.A.fromJSON(c),i}));return o&&S.some((({symbol:e})=>!e))&&o(S),new u.A(S)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(e,t,r){if(null!=this._cachedServiceDescription&&this._cachedServiceDescription.url===e)return this._cachedServiceDescription.serviceDescription;const o=await(0,z.AT)(e,t,r);return this._cachedServiceDescription={serviceDescription:o,url:e},o}_setStopSymbol(e){if(!e||0===e.length)return;if(null==this.defaultSymbols.stops)return;if(e.every((({symbol:e})=>null!=e)))return;const{first:t,last:r,middle:o,unlocated:i,waypoint:s,break:n}=this.defaultSymbols.stops;if(null==this.routeInfo||1===e.length)return void e.forEach(((i,s)=>{switch(s){case 0:i.symbol=t;break;case e.length-1:i.symbol=r;break;default:i.symbol=o}}));const l=e.map((({sequence:e})=>e)).filter((e=>null!=e)),a=Math.min(...l),u=Math.max(...l);for(const l of e)l.sequence!==a?l.sequence!==u?"ok"===l.status||"not-located-on-closest"===l.status?"waypoint"!==l.locationType?"break"!==l.locationType?l.symbol=o:l.symbol=n:l.symbol=s:l.symbol=i:l.symbol=r:l.symbol=t}_toRouteLayerSolution(e){const t=e.routeResults[0].stops?.map((e=>X.A.fromJSON(e.toJSON())));this._setStopSymbol(t);const r=new de(t),o=new ce(e.polygonBarriers?.map((e=>{const t=Y.A.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polygonBarriers,t}))),i=new ye(e.polylineBarriers?.map((e=>{const t=V.A.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polylineBarriers,t}))),s=new pe(e.pointBarriers?.map((e=>{const t=K.A.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.pointBarriers,t}))),n=e.routeResults[0].route?.toJSON(),l=$.A.fromJSON(n);l.symbol=this.defaultSymbols.routeInfo;const a=new ue(e.routeResults[0].directionPoints?.features.map((e=>{const t=U.A.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionPoints,t})));return{directionLines:new ae(e.routeResults[0].directionLines?.features.map((e=>{const t=E.A.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionLines,t}))),directionPoints:a,pointBarriers:s,polygonBarriers:o,polylineBarriers:i,routeInfo:l,stops:r}}_writeDirectionLines(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",E.A.fields,"DirectionLines","Direction Lines")}_writeDirectionPoints(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",U.A.fields,"DirectionPoints","Direction Points")}_writeNetworkFeatures(e,t,r,o,i,s){if(!e?.length)return null;const n=this.spatialReference.toJSON(),{fullExtent:l,maxScale:a,minScale:u}=this;return{featureSet:{features:e.toArray().map((e=>function(e){const{attributes:t,geometry:r,popupTemplate:o,symbol:i}=e.toGraphic().toJSON();return{attributes:t,geometry:r,popupInfo:o,symbol:i}}(e))),geometryType:r,spatialReference:n},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:null!=t?t.toJSON():oe(r)}},extent:l.toJSON(),fields:o,geometryType:r,hasM:!1,hasZ:!1,maxScale:a,minScale:u,name:i,objectIdField:"ObjectID",spatialReference:n,title:s,type:"Feature Layer",typeIdField:""}}}_writePointBarriers(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",K.A.fields,"Barriers","Point Barriers")}_writePolygonBarriers(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",Y.A.fields,"PolygonBarriers","Polygon Barriers")}_writePolylineBarriers(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",V.A.fields,"PolylineBarriers","Line Barriers")}_writeRouteInfo(){return this._writeNetworkFeatures(null!=this.routeInfo?new u.A([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",$.A.fields,"RouteInfo","Route Details")}_writeStops(){const e=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",X.A.fields,"Stops","Stops");if(null==e)return null;const{stops:t}=this.defaultSymbols,r=t?.first?.toJSON(),o=t?.middle?.toJSON(),i=t?.last?.toJSON();return e.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:o,uniqueValueInfos:[{value:"1",symbol:r,label:"First Stop"},{value:`${this.stops.length}`,symbol:i,label:"Last Stop"}]},e}};(0,o._)([(0,w.MZ)({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:null==this.portalItem}}}}}}})],he.prototype,"_featureCollection",void 0),(0,o._)([(0,g.K)(["web-map","portal-item"],"_featureCollection")],he.prototype,"writeFeatureCollectionWebmap",null),(0,o._)([(0,w.MZ)({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:null!=this.portalItem}}}}}}})],he.prototype,"_type",void 0),(0,o._)([(0,w.MZ)({nonNullable:!0,type:G})],he.prototype,"defaultSymbols",void 0),(0,o._)([(0,w.MZ)({readOnly:!0})],he.prototype,"directionLines",void 0),(0,o._)([(0,S.w)(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],he.prototype,"readDirectionLines",null),(0,o._)([(0,w.MZ)({readOnly:!0})],he.prototype,"directionPoints",void 0),(0,o._)([(0,S.w)(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],he.prototype,"readDirectionPoints",null),(0,o._)([(0,w.MZ)({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],he.prototype,"featureCollectionType",void 0),(0,o._)([(0,w.MZ)({readOnly:!0})],he.prototype,"fullExtent",null),(0,o._)([(0,w.MZ)({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],he.prototype,"legendEnabled",void 0),(0,o._)([(0,w.MZ)({type:["show","hide"]})],he.prototype,"listMode",void 0),(0,o._)([(0,w.MZ)({type:Number,nonNullable:!0,json:{write:!1}})],he.prototype,"maxScale",void 0),(0,o._)([(0,S.w)(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],he.prototype,"readMaxScale",null),(0,o._)([(0,w.MZ)({type:Number,nonNullable:!0,json:{write:!1}})],he.prototype,"minScale",void 0),(0,o._)([(0,S.w)(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],he.prototype,"readMinScale",null),(0,o._)([(0,w.MZ)({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],he.prototype,"operationalLayerType",void 0),(0,o._)([(0,w.MZ)({nonNullable:!0,type:u.A.ofType(K.A)})],he.prototype,"pointBarriers",void 0),(0,o._)([(0,S.w)(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],he.prototype,"readPointBarriers",null),(0,o._)([(0,w.MZ)({nonNullable:!0,type:u.A.ofType(Y.A)})],he.prototype,"polygonBarriers",void 0),(0,o._)([(0,S.w)(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],he.prototype,"readPolygonBarriers",null),(0,o._)([(0,w.MZ)({nonNullable:!0,type:u.A.ofType(V.A)})],he.prototype,"polylineBarriers",void 0),(0,o._)([(0,S.w)(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],he.prototype,"readPolylineBarriers",null),(0,o._)([(0,w.MZ)({readOnly:!0})],he.prototype,"routeInfo",void 0),(0,o._)([(0,S.w)(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],he.prototype,"readRouteInfo",null),(0,o._)([(0,w.MZ)({type:ee.A})],he.prototype,"spatialReference",void 0),(0,o._)([(0,S.w)(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],he.prototype,"readSpatialReference",null),(0,o._)([(0,w.MZ)({nonNullable:!0,type:u.A.ofType(X.A)})],he.prototype,"stops",void 0),(0,o._)([(0,S.w)(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],he.prototype,"readStops",null),(0,o._)([(0,w.MZ)()],he.prototype,"title",null),(0,o._)([(0,w.MZ)({readOnly:!0,json:{read:!1}})],he.prototype,"type",void 0),(0,o._)([(0,w.MZ)()],he.prototype,"url",null),he=(0,o._)([(0,v.$)(me)],he);const we=he}}]);