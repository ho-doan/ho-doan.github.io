"use strict";(self.webpackChunkarcgis_node=self.webpackChunkarcgis_node||[]).push([[1786],{1786:(e,t,i)=>{i.r(t),i.d(t,{ElevationProfileView2D:()=>c});var o=i(56802),s=i(57725),n=i(61985),h=i(34677),r=i(22136),a=i(3132),d=i(37623),l=i(96383);class p{constructor(e){this._params=e,this._highlightTask=null,this._highlightHandle=null}destroy(){this.remove()}remove(){this._highlightTask=(0,s.DC)(this._highlightTask),this._highlightHandle=(0,s.xt)(this._highlightHandle)}update(e){if(this.remove(),null==e||(null==(t=e).geometry||"polyline"!==t.geometry.type))return;var t;const i=e.layer;this._highlightTask=(0,a.UT)((async t=>{const o=await this._params.view.whenLayerView(i);(0,d.Te)(t);const s=(0,l.Of)(o)?o:null;s&&(this._highlightHandle=s.highlight(e))}))}}class c{constructor(e,t){this._handles=new o.A,this._inputRepresentation=new p({view:e}),this._hoveredPoints=new r.t({view:e}),this._handles.add([(0,n.wB)((()=>t.viewModel.hoveredPoints),(e=>this._hoveredPoints.update(e)),n.pc),(0,n.wB)((()=>{const{state:e,highlightEnabled:i,viewModel:o}=t;return{input:o.input,state:e,highlightEnabled:i}}),(e=>this._updateInputRepresentation(e)),n.pc)])}destroy(){this._handles=(0,s.pR)(this._handles),this._inputRepresentation=(0,s.pR)(this._inputRepresentation),this._hoveredPoints=(0,s.pR)(this._hoveredPoints)}_updateInputRepresentation({input:e,state:t,highlightEnabled:i}){t===h.o8.Selected&&i?this._inputRepresentation.update(e):this._inputRepresentation.remove()}}},22136:(e,t,i)=>{i.d(t,{t:()=>p});var o=i(82392),s=i(73783),n=i(40377),h=i(61985),r=i(81482),a=(i(6273),i(80861),i(67498),i(26325)),d=i(34677),l=i(74512);let p=class extends s.A{constructor(e){super(e),this._hoveredPoints=new n.A}initialize(){this.addHandles((0,h.wB)((()=>this._hoveredPoints.toArray().map((({anchor:e,element:t})=>({screenLocation:e.screenLocation,element:t})))),(e=>{for(const{screenLocation:t,element:i}of e)t&&(i.style.transform=`translate(${t.x}px, ${t.y}px)`)}),h.pc))}destroy(){this._hoveredPoints.drain((e=>this._destroyHoveredPoint(e)))}update(e){const t=this.view,i=this._hoveredPoints,o=e.length;for(;this._hoveredPoints.length>o;)this._destroyHoveredPoint(this._hoveredPoints.pop());for(;this._hoveredPoints.length<o;){const e=this._makeHoveredPoint();i.push(e),t.surface?.appendChild(e.element)}for(let t=0;t<o;++t){const s=i.at(o-1-t),n=e[t];this._updateHoveredPoint(s,n)}}_makeHoveredPoint(){const{size:e,borderStyle:t,borderColor:i,borderWidth:o,boxShadow:s}=(0,d.zj)().hoveredPointsStyle,n=this.view,h=new l.A({view:n,screenLocationEnabled:!0}),r=document.createElement("div"),a=r.style;return a.position="absolute",a.top="0",a.left="0",a.contain="strict",a.boxSizing="border-box",a.width=`${e}px`,a.height=`${e}px`,a.marginTop=`-${e/2}px`,a.marginLeft=`-${e/2}px`,a.border=`${t} ${o}px ${i}`,a.borderRadius=`${e}px`,a.boxShadow=s,{anchor:h,element:r}}_updateHoveredPoint({anchor:e,element:t},i){e.screenLocationEnabled=!0,e.location=i.hoveredPoint;const o=t.style;o.display="block",o.background=i.color.toCss()}_destroyHoveredPoint({anchor:e,element:t}){e.destroy(),this.view.surface?.removeChild(t)}};(0,o._)([(0,r.MZ)()],p.prototype,"view",void 0),(0,o._)([(0,r.MZ)()],p.prototype,"_hoveredPoints",void 0),p=(0,o._)([(0,a.$)("esri.widgets.ElevationProfile.support.HoveredPoints")],p)}}]);